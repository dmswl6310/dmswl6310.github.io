{"version":3,"file":"component---src-pages-index-tsx-e0d13e48a3a1b461df51.js","mappings":"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","sources":["webpack://gatsby-starter-default/./node_modules/@emotion/is-prop-valid/dist/emotion-is-prop-valid.esm.js","webpack://gatsby-starter-default/./node_modules/@emotion/styled/base/dist/emotion-styled-base.browser.esm.js","webpack://gatsby-starter-default/../src/image-utils.ts","webpack://gatsby-starter-default/../src/components/hooks.ts","webpack://gatsby-starter-default/../src/components/layout-wrapper.tsx","webpack://gatsby-starter-default/../src/components/picture.tsx","webpack://gatsby-starter-default/../src/components/placeholder.tsx","webpack://gatsby-starter-default/../src/components/main-image.tsx","webpack://gatsby-starter-default/../src/components/gatsby-image.server.tsx","webpack://gatsby-starter-default/../src/components/gatsby-image.browser.tsx","webpack://gatsby-starter-default/../src/components/static-image.server.tsx","webpack://gatsby-starter-default/../src/components/static-image.tsx","webpack://gatsby-starter-default/./node_modules/gatsby-plugin-image/node_modules/camelcase/index.js","webpack://gatsby-starter-default/./src/components/Common/GlobalStyle.tsx","webpack://gatsby-starter-default/./src/components/Common/Footer.tsx","webpack://gatsby-starter-default/./src/components/Main/ProfileImage.tsx","webpack://gatsby-starter-default/./src/components/Main/Introduction.tsx","webpack://gatsby-starter-default/./src/components/Main/PostItem.tsx","webpack://gatsby-starter-default/./src/hooks/useInfiniteScroll.tsx","webpack://gatsby-starter-default/./src/components/Main/PostList.tsx","webpack://gatsby-starter-default/./node_modules/decode-uri-component/index.js","webpack://gatsby-starter-default/./node_modules/split-on-first/index.js","webpack://gatsby-starter-default/./node_modules/filter-obj/index.js","webpack://gatsby-starter-default/./node_modules/query-string/base.js","webpack://gatsby-starter-default/./node_modules/query-string/index.js","webpack://gatsby-starter-default/./src/components/Main/CategoryList.tsx","webpack://gatsby-starter-default/./src/pages/index.tsx"],"sourcesContent":["import memoize from '@emotion/memoize';\n\nvar reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/; // https://esbench.com/bench/5bfee68a4cd7e6009ef61d23\n\nvar isPropValid = /* #__PURE__ */memoize(function (prop) {\n  return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111\n  /* o */\n  && prop.charCodeAt(1) === 110\n  /* n */\n  && prop.charCodeAt(2) < 91;\n}\n/* Z+1 */\n);\n\nexport default isPropValid;\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useContext, createElement, Fragment } from 'react';\nimport isPropValid from '@emotion/is-prop-valid';\nimport { withEmotionCache, ThemeContext } from '@emotion/react';\nimport { getRegisteredStyles, registerStyles, insertStyles } from '@emotion/utils';\nimport { serializeStyles } from '@emotion/serialize';\nimport { useInsertionEffectAlwaysWithSyncFallback } from '@emotion/use-insertion-effect-with-fallbacks';\n\nvar testOmitPropsOnStringTag = isPropValid;\n\nvar testOmitPropsOnComponent = function testOmitPropsOnComponent(key) {\n  return key !== 'theme';\n};\n\nvar getDefaultShouldForwardProp = function getDefaultShouldForwardProp(tag) {\n  return typeof tag === 'string' && // 96 is one less than the char code\n  // for \"a\" so this is checking that\n  // it's a lowercase character\n  tag.charCodeAt(0) > 96 ? testOmitPropsOnStringTag : testOmitPropsOnComponent;\n};\nvar composeShouldForwardProps = function composeShouldForwardProps(tag, options, isReal) {\n  var shouldForwardProp;\n\n  if (options) {\n    var optionsShouldForwardProp = options.shouldForwardProp;\n    shouldForwardProp = tag.__emotion_forwardProp && optionsShouldForwardProp ? function (propName) {\n      return tag.__emotion_forwardProp(propName) && optionsShouldForwardProp(propName);\n    } : optionsShouldForwardProp;\n  }\n\n  if (typeof shouldForwardProp !== 'function' && isReal) {\n    shouldForwardProp = tag.__emotion_forwardProp;\n  }\n\n  return shouldForwardProp;\n};\n\nvar ILLEGAL_ESCAPE_SEQUENCE_ERROR = \"You have illegal escape sequence in your template literal, most likely inside content's property value.\\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \\\"content: '\\\\00d7';\\\" should become \\\"content: '\\\\\\\\00d7';\\\".\\nYou can read more about this here:\\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences\";\n\nvar Insertion = function Insertion(_ref) {\n  var cache = _ref.cache,\n      serialized = _ref.serialized,\n      isStringTag = _ref.isStringTag;\n  registerStyles(cache, serialized, isStringTag);\n  var rules = useInsertionEffectAlwaysWithSyncFallback(function () {\n    return insertStyles(cache, serialized, isStringTag);\n  });\n\n  return null;\n};\n\nvar createStyled = function createStyled(tag, options) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (tag === undefined) {\n      throw new Error('You are trying to create a styled element with an undefined component.\\nYou may have forgotten to import it.');\n    }\n  }\n\n  var isReal = tag.__emotion_real === tag;\n  var baseTag = isReal && tag.__emotion_base || tag;\n  var identifierName;\n  var targetClassName;\n\n  if (options !== undefined) {\n    identifierName = options.label;\n    targetClassName = options.target;\n  }\n\n  var shouldForwardProp = composeShouldForwardProps(tag, options, isReal);\n  var defaultShouldForwardProp = shouldForwardProp || getDefaultShouldForwardProp(baseTag);\n  var shouldUseAs = !defaultShouldForwardProp('as');\n  return function () {\n    var args = arguments;\n    var styles = isReal && tag.__emotion_styles !== undefined ? tag.__emotion_styles.slice(0) : [];\n\n    if (identifierName !== undefined) {\n      styles.push(\"label:\" + identifierName + \";\");\n    }\n\n    if (args[0] == null || args[0].raw === undefined) {\n      styles.push.apply(styles, args);\n    } else {\n      if (process.env.NODE_ENV !== 'production' && args[0][0] === undefined) {\n        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n      }\n\n      styles.push(args[0][0]);\n      var len = args.length;\n      var i = 1;\n\n      for (; i < len; i++) {\n        if (process.env.NODE_ENV !== 'production' && args[0][i] === undefined) {\n          console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n        }\n\n        styles.push(args[i], args[0][i]);\n      }\n    } // $FlowFixMe: we need to cast StatelessFunctionalComponent to our PrivateStyledComponent class\n\n\n    var Styled = withEmotionCache(function (props, cache, ref) {\n      var FinalTag = shouldUseAs && props.as || baseTag;\n      var className = '';\n      var classInterpolations = [];\n      var mergedProps = props;\n\n      if (props.theme == null) {\n        mergedProps = {};\n\n        for (var key in props) {\n          mergedProps[key] = props[key];\n        }\n\n        mergedProps.theme = useContext(ThemeContext);\n      }\n\n      if (typeof props.className === 'string') {\n        className = getRegisteredStyles(cache.registered, classInterpolations, props.className);\n      } else if (props.className != null) {\n        className = props.className + \" \";\n      }\n\n      var serialized = serializeStyles(styles.concat(classInterpolations), cache.registered, mergedProps);\n      className += cache.key + \"-\" + serialized.name;\n\n      if (targetClassName !== undefined) {\n        className += \" \" + targetClassName;\n      }\n\n      var finalShouldForwardProp = shouldUseAs && shouldForwardProp === undefined ? getDefaultShouldForwardProp(FinalTag) : defaultShouldForwardProp;\n      var newProps = {};\n\n      for (var _key in props) {\n        if (shouldUseAs && _key === 'as') continue;\n\n        if ( // $FlowFixMe\n        finalShouldForwardProp(_key)) {\n          newProps[_key] = props[_key];\n        }\n      }\n\n      newProps.className = className;\n      newProps.ref = ref;\n      return /*#__PURE__*/createElement(Fragment, null, /*#__PURE__*/createElement(Insertion, {\n        cache: cache,\n        serialized: serialized,\n        isStringTag: typeof FinalTag === 'string'\n      }), /*#__PURE__*/createElement(FinalTag, newProps));\n    });\n    Styled.displayName = identifierName !== undefined ? identifierName : \"Styled(\" + (typeof baseTag === 'string' ? baseTag : baseTag.displayName || baseTag.name || 'Component') + \")\";\n    Styled.defaultProps = tag.defaultProps;\n    Styled.__emotion_real = Styled;\n    Styled.__emotion_base = baseTag;\n    Styled.__emotion_styles = styles;\n    Styled.__emotion_forwardProp = shouldForwardProp;\n    Object.defineProperty(Styled, 'toString', {\n      value: function value() {\n        if (targetClassName === undefined && process.env.NODE_ENV !== 'production') {\n          return 'NO_COMPONENT_SELECTOR';\n        } // $FlowFixMe: coerce undefined to string\n\n\n        return \".\" + targetClassName;\n      }\n    });\n\n    Styled.withComponent = function (nextTag, nextOptions) {\n      return createStyled(nextTag, _extends({}, options, nextOptions, {\n        shouldForwardProp: composeShouldForwardProps(Styled, nextOptions, true)\n      })).apply(void 0, styles);\n    };\n\n    return Styled;\n  };\n};\n\nexport default createStyled;\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import React, { FunctionComponent } from 'react'\r\nimport { Global, css } from '@emotion/react'\r\n\r\nconst defaultStyle = css`\r\n  @import url('https://avatars.githubusercontent.com/u/45475492?s=400&u=c5843124c94a24eb3651fbc5d54e38dfbbe75818&v=4');\r\n\r\n  * {\r\n    padding: 0;\r\n    margin: 0;\r\n    box-sizing: border-box;\r\n    font-family: 'Nanum Myeongjo', serif;\r\n  }\r\n\r\n  html,\r\n  body,\r\n  #___gatsby {\r\n    height: 100%;\r\n  }\r\n\r\n  a,\r\n  a:hover {\r\n    color: inherit;\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst GlobalStyle: FunctionComponent = function () {\r\n  return <Global styles={defaultStyle} />\r\n}\r\n\r\nexport default GlobalStyle\r\n","import React, { FunctionComponent } from 'react'\r\nimport styled from '@emotion/styled'\r\n\r\nconst FooterWrapper = styled.div`\r\n  display: grid;\r\n  place-items: center;\r\n  margin-top: auto;\r\n  padding: 50px 0;\r\n  font-size: 15px;\r\n  text-align: center;\r\n  line-height: 1.5;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 13px;\r\n  }\r\n`\r\n\r\nconst Footer: FunctionComponent = function () {\r\n  return (\r\n    <FooterWrapper>\r\n      Thank You for Visiting My Blog, Have a Good Day 😆\r\n      <br />© 2023 Developer Eunji, Powered By Gatsby.\r\n    </FooterWrapper>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React, { FunctionComponent } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { GatsbyImage, IGatsbyImageData } from 'gatsby-plugin-image'\r\n\r\n// 자신이 원하는 프로필 이미지 링크로 설정해주세요.\r\n// const PROFILE_IMAGE_LINK =\r\n//   'https://avatars.githubusercontent.com/u/45475492?s=400&u=c5843124c94a24eb3651fbc5d54e38dfbbe75818&v=4'\r\n\r\ntype ProfileImageProps = {\r\n  profileImage: IGatsbyImageData\r\n}\r\n\r\nconst ProfileImageWrapper = styled(GatsbyImage)`\r\n  width: 120px;\r\n  height: 120px;\r\n  margin-bottom: 30px;\r\n  border-radius: 50%;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 80px;\r\n    height: 80px;\r\n  }\r\n`\r\n\r\nconst ProfileImage: FunctionComponent<ProfileImageProps> = function ({\r\n  profileImage,\r\n}) {\r\n  return <ProfileImageWrapper image={profileImage} alt=\"Profile Image\" />\r\n}\r\n\r\nexport default ProfileImage\r\n","import React, { FunctionComponent } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { IGatsbyImageData } from 'gatsby-plugin-image'\r\nimport ProfileImage from 'components/Main/ProfileImage'\r\n\r\ntype IntroductionProps = {\r\n  profileImage: IGatsbyImageData\r\n}\r\n\r\nconst Background = styled.div`\r\n  width: 100%;\r\n  background-image: linear-gradient(60deg, #29323c 0%, #485563 100%);\r\n  color: #ffffff;\r\n`\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  width: 768px;\r\n  height: 400px;\r\n  margin: 0 auto;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    height: 300px;\r\n    padding: 0 20px;\r\n  }\r\n`\r\n\r\nconst SubTitle = styled.div`\r\n  font-size: 20px;\r\n  font-weight: 400;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 15px;\r\n  }\r\n`\r\n\r\nconst Title = styled.div`\r\n  margin-top: 5px;\r\n  font-size: 35px;\r\n  font-weight: 700;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 25px;\r\n  }\r\n`\r\n\r\nconst Introduction: FunctionComponent<IntroductionProps> = function ({\r\n  profileImage,\r\n}) {\r\n  return (\r\n    <Background>\r\n      <Wrapper>\r\n        <ProfileImage profileImage={profileImage} />\r\n\r\n        <div>\r\n          <SubTitle>Nice to Meet You,</SubTitle>\r\n          <Title>I'm Junior Developer Eunji.</Title>\r\n        </div>\r\n      </Wrapper>\r\n    </Background>\r\n  )\r\n}\r\n\r\nexport default Introduction\r\n","import React, { FunctionComponent } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { Link } from 'gatsby'\r\nimport { GatsbyImage } from 'gatsby-plugin-image'\r\nimport { PostFrontmatterType } from 'types/PostItem.types'\r\n\r\ntype PostItemProps = PostFrontmatterType & { link: string }\r\n\r\nconst PostItemContent = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 15px;\r\n`\r\nconst PostItemWrapper = styled(Link)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.15);\r\n  transition: 0.3s box-shadow;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\r\n  }\r\n`\r\n\r\nconst ThumbnailImage = styled(GatsbyImage)`\r\n  width: 100%;\r\n  height: 200px;\r\n  border-radius: 10px 10px 0 0;\r\n`\r\n\r\nconst Title = styled.div`\r\n  display: -webkit-box;\r\n  overflow: hidden;\r\n  margin-bottom: 3px;\r\n  text-overflow: ellipsis;\r\n  white-space: normal;\r\n  overflow-wrap: break-word;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n`\r\n\r\nconst Date = styled.div`\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  opacity: 0.7;\r\n`\r\n\r\nconst Category = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin-top: 10px;\r\n  margin: 10px -5px;\r\n`\r\n\r\nconst CategoryItem = styled.div`\r\n  margin: 2.5px 5px;\r\n  padding: 3px 5px;\r\n  border-radius: 3px;\r\n  background: black;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  color: white;\r\n`\r\n\r\nconst Summary = styled.div`\r\n  display: -webkit-box;\r\n  overflow: hidden;\r\n  margin-top: auto;\r\n  text-overflow: ellipsis;\r\n  white-space: normal;\r\n  overflow-wrap: break-word;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n  font-size: 16px;\r\n  opacity: 0.8;\r\n`\r\n\r\nconst PostItem: FunctionComponent<PostItemProps> = function ({\r\n  title,\r\n  date,\r\n  categories,\r\n  summary,\r\n  thumbnail: {\r\n    childImageSharp: { gatsbyImageData },\r\n  },\r\n  link,\r\n}) {\r\n  return (\r\n    <PostItemWrapper to={link}>\r\n      <ThumbnailImage image={gatsbyImageData} alt=\"Post Item Image\" />\r\n\r\n      <PostItemContent>\r\n        <Title>{title}</Title>\r\n        <Date>{date}</Date>\r\n        <Category>\r\n          {categories.map(item => (\r\n            <CategoryItem key={item}>{item}</CategoryItem>\r\n          ))}\r\n        </Category>\r\n        <Summary>{summary}</Summary>\r\n      </PostItemContent>\r\n    </PostItemWrapper>\r\n  )\r\n}\r\n\r\nexport default PostItem\r\n","import { MutableRefObject, useState, useEffect, useRef, useMemo } from 'react'\r\nimport { PostListItemType } from 'types/PostItem.types'\r\n\r\nexport type useInfiniteScrollType = {\r\n  containerRef: MutableRefObject<HTMLDivElement | null>\r\n  postList: PostListItemType[]\r\n}\r\n\r\nconst NUMBER_OF_ITEMS_PER_PAGE = 10\r\n\r\nconst useInfiniteScroll = function (\r\n  selectedCategory: string,\r\n  posts: PostListItemType[],\r\n): useInfiniteScrollType {\r\n  const containerRef: MutableRefObject<HTMLDivElement | null> =\r\n    useRef<HTMLDivElement>(null)\r\n  const [count, setCount] = useState<number>(1)\r\n\r\n  const postListByCategory = useMemo<PostListItemType[]>(\r\n    () =>\r\n      posts.filter(\r\n        ({\r\n          node: {\r\n            frontmatter: { categories },\r\n          },\r\n        }: PostListItemType) =>\r\n          selectedCategory !== 'All'\r\n            ? categories.includes(selectedCategory)\r\n            : true,\r\n      ),\r\n    [selectedCategory],\r\n  )\r\n\r\n  const observer: IntersectionObserver = new IntersectionObserver(\r\n    (entries, observer) => {\r\n      if (!entries[0].isIntersecting) return\r\n\r\n      setCount(value => value + 1)\r\n      observer.disconnect()\r\n    },\r\n  )\r\n\r\n  useEffect(() => setCount(1), [selectedCategory])\r\n\r\n  useEffect(() => {\r\n    if (\r\n      NUMBER_OF_ITEMS_PER_PAGE * count >= postListByCategory.length ||\r\n      containerRef.current === null ||\r\n      containerRef.current.children.length === 0\r\n    )\r\n      return\r\n\r\n    observer.observe(\r\n      containerRef.current.children[containerRef.current.children.length - 1],\r\n    )\r\n  }, [count, selectedCategory])\r\n\r\n  return {\r\n    containerRef,\r\n    postList: postListByCategory.slice(0, count * NUMBER_OF_ITEMS_PER_PAGE),\r\n  }\r\n}\r\n\r\nexport default useInfiniteScroll\r\n","import React, { FunctionComponent, useMemo } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport PostItem from 'components/Main/PostItem'\r\nimport { PostListItemType } from 'types/PostItem.types'\r\nimport useInfiniteScroll, {\r\n  useInfiniteScrollType,\r\n} from 'hooks/useInfiniteScroll'\r\n\r\nexport type PostType = {\r\n  node: {\r\n    id: string\r\n    frontmatter: {\r\n      title: string\r\n      summary: string\r\n      date: string\r\n      categories: string[]\r\n      thumbnail: {\r\n        publicURL: string\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\ntype PostListProps = {\r\n  selectedCategory: string\r\n  posts: PostListItemType[]\r\n}\r\n\r\nconst PostListWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-gap: 20px;\r\n  width: 768px;\r\n  margin: 0 auto;\r\n  padding: 50px 0 100px;\r\n\r\n  @media (max-width: 768px) {\r\n    grid-template-columns: 1fr;\r\n    width: 100%;\r\n    padding: 50px 20px;\r\n  }\r\n`\r\n\r\nconst PostList: FunctionComponent<PostListProps> = function ({\r\n  selectedCategory,\r\n  posts,\r\n}) {\r\n  const { containerRef, postList }: useInfiniteScrollType = useInfiniteScroll(\r\n    selectedCategory,\r\n    posts,\r\n  )\r\n\r\n  return (\r\n    <PostListWrapper ref={containerRef}>\r\n      {postList.map(\r\n        ({\r\n          node: {\r\n            id,\r\n            fields: { slug },\r\n            frontmatter,\r\n          },\r\n        }: PostListItemType) => (\r\n          <PostItem {...frontmatter} link={slug} key={id} />\r\n        ),\r\n      )}\r\n    </PostListWrapper>\r\n  )\r\n}\r\n\r\nexport default PostList\r\n","const token = '%[a-f0-9]{2}';\nconst singleMatcher = new RegExp('(' + token + ')|([^%]+?)', 'gi');\nconst multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn [decodeURIComponent(components.join(''))];\n\t} catch {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tconst left = components.slice(0, split);\n\tconst right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch {\n\t\tlet tokens = input.match(singleMatcher) || [];\n\n\t\tfor (let i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher) || [];\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tconst replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD',\n\t};\n\n\tlet match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch {\n\t\t\tconst result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tconst entries = Object.keys(replaceMap);\n\n\tfor (const key of entries) {\n\t\t// Replace all decoded components\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nexport default function decodeUriComponent(encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n}\n","export default function splitOnFirst(string, separator) {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (string === '' || separator === '') {\n\t\treturn [];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n}\n","export function includeKeys(object, predicate) {\n\tconst result = {};\n\n\tif (Array.isArray(predicate)) {\n\t\tfor (const key of predicate) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor?.enumerable) {\n\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// `Reflect.ownKeys()` is required to retrieve symbol properties\n\t\tfor (const key of Reflect.ownKeys(object)) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor.enumerable) {\n\t\t\t\tconst value = object[key];\n\t\t\t\tif (predicate(key, value, object)) {\n\t\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function excludeKeys(object, predicate) {\n\tif (Array.isArray(predicate)) {\n\t\tconst set = new Set(predicate);\n\t\treturn includeKeys(object, key => !set.has(key));\n\t}\n\n\treturn includeKeys(object, (key, value, object) => !predicate(key, value, object));\n}\n","import decodeComponent from 'decode-uri-component';\nimport splitOnFirst from 'split-on-first';\nimport {includeKeys} from 'filter-obj';\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\n// eslint-disable-next-line unicorn/prefer-code-point\nconst strictUriEncode = string => encodeURIComponent(string).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n\nconst encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result, [encode(key, options), '[', index, ']'].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\t[encode(key, options), '[]'].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[]=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'colon-list-separator': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\t[encode(key, options), ':list='].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), ':list=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\tcase 'bracket-separator': {\n\t\t\tconst keyValueSep = options.arrayFormat === 'bracket-separator'\n\t\t\t\t? '[]='\n\t\t\t\t: '=';\n\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\t// Translate null to an empty string so that it doesn't serialize as 'null'\n\t\t\t\tvalue = value === null ? '' : value;\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), keyValueSep, encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\tencode(key, options),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\n\t\t\t};\n\t\t}\n\n\t\tcase 'colon-list-separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(:list)$/.exec(key);\n\t\t\t\tkey = key.replace(/:list$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\n\t\t\t};\n\t\t}\n\n\t\tcase 'comma':\n\t\tcase 'separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : (value === null ? value : decode(value, options));\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket-separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = /(\\[])$/.test(key);\n\t\t\t\tkey = key.replace(/\\[]$/, '');\n\n\t\t\t\tif (!isArray) {\n\t\t\t\t\taccumulator[key] = value ? decode(value, options) : value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst arrayValue = value === null\n\t\t\t\t\t? []\n\t\t\t\t\t: value.split(options.arrayFormatSeparator).map(item => decode(item, options));\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = arrayValue;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], ...arrayValue];\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...[accumulator[key]].flat(), value];\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nexport function extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nexport function parse(query, options) {\n\toptions = {\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false,\n\t\t...options,\n\t};\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst returnValue = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn returnValue;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn returnValue;\n\t}\n\n\tfor (const parameter of query.split('&')) {\n\t\tif (parameter === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst parameter_ = options.decode ? parameter.replace(/\\+/g, ' ') : parameter;\n\n\t\tlet [key, value] = splitOnFirst(parameter_, '=');\n\n\t\tif (key === undefined) {\n\t\t\tkey = parameter_;\n\t\t}\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : (['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options));\n\t\tformatter(decode(key, options), value, returnValue);\n\t}\n\n\tfor (const [key, value] of Object.entries(returnValue)) {\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const [key2, value2] of Object.entries(value)) {\n\t\t\t\tvalue[key2] = parseValue(value2, options);\n\t\t\t}\n\t\t} else {\n\t\t\treturnValue[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn returnValue;\n\t}\n\n\t// TODO: Remove the use of `reduce`.\n\t// eslint-disable-next-line unicorn/no-array-reduce\n\treturn (options.sort === true ? Object.keys(returnValue).sort() : Object.keys(returnValue).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = returnValue[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexport function stringify(object, options) {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = {encode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',', ...options};\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key]))\n\t\t|| (options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const [key, value] of Object.entries(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = value;\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tif (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n\t\t\t\treturn encode(key, options) + '[]';\n\t\t\t}\n\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n}\n\nexport function parseUrl(url, options) {\n\toptions = {\n\t\tdecode: true,\n\t\t...options,\n\t};\n\n\tlet [url_, hash] = splitOnFirst(url, '#');\n\n\tif (url_ === undefined) {\n\t\turl_ = url;\n\t}\n\n\treturn {\n\t\turl: url_?.split('?')?.[0] ?? '',\n\t\tquery: parse(extract(url), options),\n\t\t...(options && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}),\n\t};\n}\n\nexport function stringifyUrl(object, options) {\n\toptions = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\t[encodeFragmentIdentifier]: true,\n\t\t...options,\n\t};\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = extract(object.url);\n\n\tconst query = {\n\t\t...parse(queryFromUrl, {sort: false}),\n\t\t...object.query,\n\t};\n\n\tlet queryString = stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\tconst urlObjectForFragmentEncode = new URL(url);\n\t\turlObjectForFragmentEncode.hash = object.fragmentIdentifier;\n\t\thash = options[encodeFragmentIdentifier] ? urlObjectForFragmentEncode.hash : `#${object.fragmentIdentifier}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n}\n\nexport function pick(input, filter, options) {\n\toptions = {\n\t\tparseFragmentIdentifier: true,\n\t\t[encodeFragmentIdentifier]: false,\n\t\t...options,\n\t};\n\n\tconst {url, query, fragmentIdentifier} = parseUrl(input, options);\n\n\treturn stringifyUrl({\n\t\turl,\n\t\tquery: includeKeys(query, filter),\n\t\tfragmentIdentifier,\n\t}, options);\n}\n\nexport function exclude(input, filter, options) {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn pick(input, exclusionFilter, options);\n}\n","import * as queryString from './base.js';\n\nexport default queryString;\n","import React, { FunctionComponent, ReactNode } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { Link } from 'gatsby'\r\n\r\ntype CategoryItemProps = {\r\n  active: boolean\r\n}\r\n\r\ntype GatsbyLinkProps = {\r\n  children: ReactNode\r\n  className?: string\r\n  to: string\r\n} & CategoryItemProps\r\n\r\nexport type CategoryListProps = {\r\n  selectedCategory: string\r\n  categoryList: {\r\n    [key: string]: number\r\n  }\r\n}\r\n\r\nconst CategoryListWrapper = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 768px;\r\n  margin: 100px auto 0;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    margin-top: 50px;\r\n    padding: 0 20px;\r\n  }\r\n`\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nconst CategoryItem = styled(({ active, ...props }: GatsbyLinkProps) => (\r\n  <Link {...props} />\r\n))<CategoryItemProps>`\r\n  margin-right: 20px;\r\n  padding: 5px 0;\r\n  font-size: 18px;\r\n  font-weight: ${({ active }) => (active ? '800' : '400')};\r\n  cursor: pointer;\r\n\r\n  &:last-of-type {\r\n    margin-right: 0;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 15px;\r\n  }\r\n`\r\n\r\n// CategoryList1 = ({selectedCategory, categoryList}:CategoryListProps)=>{\r\n//   return <div>test</div>\r\n// }\r\n\r\nconst CategoryList: FunctionComponent<CategoryListProps> = function ({\r\n  selectedCategory,\r\n  categoryList,\r\n}) {\r\n  return (\r\n    <CategoryListWrapper>\r\n      {Object.entries(categoryList).map(([name, count]) => (\r\n        <CategoryItem\r\n          to={`/?category=${name}`}\r\n          active={name === selectedCategory}\r\n          key={name}\r\n        >\r\n          #{name}({count})\r\n        </CategoryItem>\r\n      ))}\r\n    </CategoryListWrapper>\r\n  )\r\n}\r\n\r\nexport default CategoryList\r\n","import React, { FunctionComponent, useMemo } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport GlobalStyle from 'components/Common/GlobalStyle'\r\nimport Footer from 'components/Common/Footer'\r\nimport Introduction from 'components/Main/Introduction'\r\nimport PostList, { PostType } from 'components/Main/PostList'\r\nimport { graphql } from 'gatsby'\r\nimport { PostListItemType } from 'types/PostItem.types'\r\nimport { IGatsbyImageData } from 'gatsby-plugin-image'\r\nimport queryString, { ParsedQuery } from 'query-string'\r\nimport CategoryList, { CategoryListProps } from 'components/Main/CategoryList'\r\n\r\ntype IndexPageProps = {\r\n  location: {\r\n    search: string\r\n  }\r\n  data: {\r\n    allMarkdownRemark: {\r\n      edges: PostListItemType[]\r\n    }\r\n    file: {\r\n      childImageSharp: {\r\n        gatsbyImageData: IGatsbyImageData\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst IndexPage: FunctionComponent<IndexPageProps> = function ({\r\n  location: { search },\r\n  data: {\r\n    allMarkdownRemark: { edges },\r\n    file: {\r\n      childImageSharp: { gatsbyImageData },\r\n    },\r\n  },\r\n}) {\r\n  const parsed: ParsedQuery<string> = queryString.parse(search)\r\n  const selectedCategory: string =\r\n    typeof parsed.category !== 'string' || !parsed.category\r\n      ? 'All'\r\n      : parsed.category\r\n\r\n  const categoryList = useMemo(\r\n    () =>\r\n      edges.reduce(\r\n        (\r\n          list: CategoryListProps['categoryList'],\r\n          {\r\n            node: {\r\n              frontmatter: { categories },\r\n            },\r\n          },\r\n        ) => {\r\n          categories.forEach(category => {\r\n            if (list[category] === undefined) list[category] = 1\r\n            else list[category]++\r\n          })\r\n\r\n          list['All']++\r\n\r\n          return list\r\n        },\r\n        { All: 0 },\r\n      ),\r\n    [],\r\n  )\r\n\r\n  return (\r\n    <Container>\r\n      <GlobalStyle />\r\n      <Introduction profileImage={gatsbyImageData} />\r\n      <CategoryList\r\n        selectedCategory={selectedCategory}\r\n        categoryList={categoryList}\r\n      />\r\n      <PostList selectedCategory={selectedCategory} posts={edges} />\r\n      <Footer />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default IndexPage\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n`\r\n\r\nexport const getPostList = graphql`\r\n  query getPostList {\r\n    allMarkdownRemark(\r\n      sort: { order: DESC, fields: [frontmatter___date, frontmatter___title] }\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n            summary\r\n            date(formatString: \"YYYY.MM.DD.\")\r\n            categories\r\n            thumbnail {\r\n              childImageSharp {\r\n                gatsbyImageData(width: 768, height: 400)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    file(name: { eq: \"profile-image\" }) {\r\n      childImageSharp {\r\n        gatsbyImageData(width: 120, height: 120)\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["reactPropsRegex","prop","test","charCodeAt","testOmitPropsOnStringTag","testOmitPropsOnComponent","key","getDefaultShouldForwardProp","tag","composeShouldForwardProps","options","isReal","shouldForwardProp","optionsShouldForwardProp","__emotion_forwardProp","propName","Insertion","_ref","cache","serialized","isStringTag","createStyled","identifierName","targetClassName","__emotion_real","baseTag","__emotion_base","undefined","label","target","defaultShouldForwardProp","shouldUseAs","args","arguments","styles","__emotion_styles","slice","push","raw","apply","len","length","i","Styled","w","props","ref","FinalTag","as","className","classInterpolations","mergedProps","theme","useContext","T","registered","concat","name","finalShouldForwardProp","newProps","_key","createElement","Fragment","displayName","defaultProps","Object","defineProperty","value","withComponent","nextTag","nextOptions","hasNativeLazyLoadSupport","HTMLImageElement","prototype","srcSet","width","height","layout","wrapperStyle","style","getMainProps","isLoading","isLoaded","images","loading","shouldLoad","_extends","opacity","getPlaceholderProps","placeholder","backgroundColor","objectFit","objectPosition","position","top","left","bottom","right","result","transition","Sizer","React","paddingTop","maxWidth","display","alt","role","src","LayoutWrapper","children","_objectWithoutPropertiesLoose","Image","decoding","Picture","_ref2","fallback","sources","sizes","map","media","type","fallbackImage","propTypes","PropTypes","Placeholder","_Picture$propTypes","componentName","Error","MainImage","removeNewLines","str","replace","altValidator","rest","image","_excluded","Set","renderImageToStringPromise","renderImage","GatsbyImageHydrator","class","preactClass","onStartLoad","onLoad","onError","getWrapperProps","wStyle","wClass","wrapperProps","root","useRef","useMemo","JSON","stringify","sizer","useEffect","import","then","renderImageToString","swapPlaceholderImage","ssrImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","onLoadListener","imageCache","add","cacheKey","has","animationFrame","cleanupCallback","innerHTML","requestAnimationFrame","cancelAnimationFrame","useLayoutEffect","dangerouslySetInnerHTML","__html","suppressHydrationWarning","GatsbyImage","memo","_getStaticImage","StaticImage","__imageData","imageData","__error","console","warn","imgClassName","imgStyle","placeholderBackgroundColor","cleanedImages","source","checkDimensionProps","validLayouts","GatsbyImageBrowser","UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","RegExp","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","input","Array","isArray","TypeError","pascalCase","preserveConsecutiveUppercase","x","trim","filter","join","toLowerCase","locale","string","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","preserveCamelCase","lastIndex","m1","charAt","_","identifier","m","postProcess","module","exports","defaultStyle","___EmotionJSX","Global","FooterWrapper","ProfileImageWrapper","_styled","profileImage","Background","Wrapper","SubTitle","Title","ProfileImage","PostItemContent","PostItemWrapper","Link","ThumbnailImage","Date","Category","CategoryItem","Summary","title","date","categories","summary","thumbnail","childImageSharp","gatsbyImageData","link","to","item","selectedCategory","posts","containerRef","count","setCount","useState","postListByCategory","node","frontmatter","includes","observer","IntersectionObserver","entries","isIntersecting","disconnect","observe","postList","PostListWrapper","useInfiniteScroll","id","fields","slug","PostItem","token","singleMatcher","multiMatcher","decodeComponents","components","split","decodeURIComponent","call","decode","tokens","match","decodeUriComponent","encodedURI","replaceMap","exec","keys","customDecodeURIComponent","splitOnFirst","separator","separatorIndex","indexOf","includeKeys","object","predicate","descriptor","getOwnPropertyDescriptor","enumerable","Reflect","ownKeys","encodeFragmentIdentifier","Symbol","validateArrayFormatSeparator","encode","strict","encodeURIComponent","toString","keysSorter","sort","a","b","Number","removeHash","hashStart","parseValue","parseNumbers","isNaN","parseBooleans","extract","queryStart","parse","query","arrayFormat","arrayFormatSeparator","formatter","accumulator","isEncodedArray","newValue","arrayValue","flat","parserForArrayFormat","returnValue","create","parameter","parameter_","key2","value2","reduce","Boolean","shouldFilter","skipNull","skipEmptyString","index","keyValueSep","encoderForArrayFormat","objectCopy","parseUrl","url","url_","hash","parseFragmentIdentifier","fragmentIdentifier","stringifyUrl","queryString","getHash","urlObjectForFragmentEncode","URL","pick","exclude","CategoryListWrapper","active","categoryList","_ref4","location","search","data","allMarkdownRemark","edges","file","parsed","category","list","forEach","All","Container","GlobalStyle","Introduction","CategoryList","PostList","Footer"],"sourceRoot":""}